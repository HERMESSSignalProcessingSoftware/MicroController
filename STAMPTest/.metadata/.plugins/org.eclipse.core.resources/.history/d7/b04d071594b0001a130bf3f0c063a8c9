/*
 * task.h
 *
 *  Created on: 17.06.2020
 *      Author: Robin Grimsmann
 */

#ifndef TASK_H_
#define TASK_H_

osThreadId_t measureTaskHandle;
const osThreadAttr_t measureTask_attributes = {
  .name = "measureTask",
  .priority = (osPriority_t) osPriorityNormal,
  .stack_size = 128 * 4
};
/* Definitions for UARTTransmit */
osThreadId_t UARTTransmitHandle;
const osThreadAttr_t UARTTransmit_attributes = {
  .name = "UARTTransmit",
  .priority = (osPriority_t) osPriorityNormal,
  .stack_size = 128 * 4
};
/* Definitions for HeartBeat */
osThreadId_t HeartBeatHandle;
const osThreadAttr_t HeartBeat_attributes = {
  .name = "HeartBeat",
  .priority = (osPriority_t) osPriorityLow,
  .stack_size = 128 * 4
};
/* Definitions for dataQueue */
osMessageQueueId_t dataQueueHandle;
const osMessageQueueAttr_t dataQueue_attributes = {
  .name = "dataQueue"
};


#endif /* TASK_H_ */
